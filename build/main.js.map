{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"chalk\"","webpack:///external \"is-empty\"","webpack:///external \"fs-extra\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","oVar","szKeyColor","szValueColor","szVarValueOverride","keyColor","valueColor","keys","_isEmpty","_typeof","values","JSON","stringify","getChalkColor","mirror","concat","log","arrPathsObj","szPreErrorMessage","Promise","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee2","resolve","reject","wrap","_context2","prev","next","Array","isArray","map","_ref2","_callee","pathToCheck","_context","fs","access","stop","_x3","apply","this","arguments","t0","chalk","red","grey","_x","_x2","_chalk","_interopRequireDefault","_fsExtra","console","szColor","toLowerCase","orange","yellow","green","blue","magenta","cyan","white","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","printLine","colorOrOptions","lines","opts","options","_options$color","color","_options$length","length","_options$character","character","_options$quantity","quantity","parseLineOptions","_opts$","line","repeat","lineColor","push","_callee3","arrFilePaths","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_args3","_context3","undefined","flatMap","mTarget","iterator","done","t1","finish","t2","require"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import chalk from \"chalk\";\nimport isEmpty from \"is-empty\";\nimport fs from \"fs-extra\";\nconst log = console.log;\n\nexport function getChalkColor(szColor) {\n  let color = szColor.toLowerCase();\n  switch (color) {\n    case \"red\":\n      return chalk.red;\n    case \"orange\":\n      return chalk.orange;\n    case \"yellow\":\n      return chalk.yellow;\n    case \"green\":\n      return chalk.green;\n    case \"blue\":\n      return chalk.blue;\n    case \"magenta\":\n      return chalk.magenta;\n    case \"cyan\":\n      return chalk.cyan;\n    case \"white\":\n      return chalk.white;\n    case \"grey\":\n      return chalk.grey;\n    case \"redBright\":\n      return chalk.redBright;\n    case \"greenBright\":\n      return chalk.greenBright;\n    case \"yellowBright\":\n      return chalk.yellowBright;\n    case \"blueBright\":\n      return chalk.blueBright;\n    case \"magentaBright\":\n      return chalk.magentaBright;\n    case \"cyanBright\":\n      return chalk.cyanBright;\n    case \"whiteBright\":\n      return chalk.whiteBright;\n    default:\n      return chalk.white;\n  }\n}\n\n//TODO: Create an enum of available colors (instead of relying on strings)\n//TODO: Rename \"printMirror\" to just \"mirror\" (or something else)\nexport function printMirror(\n  oVar,\n  szKeyColor,\n  szValueColor,\n  szVarValueOverride\n) {\n  //? Faster to call keys/values separately or entries?\n  let key, value, keyColor, valueColor;\n  key = Object.keys(oVar)[0];\n\n  if (isEmpty(szVarValueOverride)) {\n    if (typeof Object.values(oVar)[0] == \"object\") {\n      value = JSON.stringify(Object.values(oVar)[0], null, 2);\n    } else {\n      value = Object.values(oVar)[0];\n    }\n  } else {\n    value = szVarValueOverride;\n  }\n\n  keyColor = getChalkColor(szKeyColor);\n  valueColor = getChalkColor(szValueColor);\n  let mirror = `${keyColor(key)}: ${valueColor(value)}`;\n  log(mirror);\n  return mirror;\n}\n/* \n  TODO: Add oLineStyle arg\n  printMarquee(\n    \"blue\",\n    [\"childDirPath\", \"childPackagePath\"],\n    \"white\",\n    \"were both found\"\n  );\n*/\n\n//? Replace printMarquee with functions below?\n//TODO: printAndList\n//TODO: printAndOrList\n//TODO: printOrList\n\n/*export*/ function printMarquee(\n  szActorsColor,\n  arrActors,\n  szAnnouncementColor,\n  szAnnouncement,\n  oLineStyle\n) {\n  /*\n  TODO: Replicate\n    log(\n      `${chalk.blue(\"childDirPath\")} and ${chalk.blue(\n        \"childPackagePath\"\n      )} were both found`\n    );\n  */\n  let str;\n  let arrColoredActors = [];\n  arrActors.map(actor => {\n    let chalkColor = getChalkColor(szActorsColor);\n    arrColoredActors.push(chalkColor(actor));\n  });\n  // log(`arrColoredActors: ${JSON.stringify(arrColoredActors, null, 2)}`);\n  log(`arrColoredActors: ${arrColoredActors}`);\n}\n\nfunction parseLineOptions(options) {\n  let typeFlag;\n  if (typeof options === \"object\") {\n    const {\n      color = \"white\",\n      length = 59,\n      character = \"-\",\n      quantity = 1\n    } = options;\n    typeFlag = \"object\";\n    return [\n      typeFlag,\n      {\n        color,\n        length,\n        character,\n        quantity\n      }\n    ];\n  } else if (typeof options === \"string\") {\n    typeFlag = \"string\";\n    let color = options;\n    return [typeFlag, color];\n  }\n}\n\nexport function printLine(colorOrOptions) {\n  let lines = [];\n  let opts = parseLineOptions(colorOrOptions);\n  if (opts[0] == \"object\") {\n    var { color, length, character, quantity } = opts[1];\n  } else if (opts[0] == \"string\") {\n    color = opts[1];\n    length = 59;\n    character = \"-\";\n    quantity = 1;\n  }\n  let line = character.repeat(length);\n  let lineColor = getChalkColor(color);\n  for (let i = 0; i < quantity; i++) {\n    log(lineColor(line));\n    lines.push(lineColor(line));\n  }\n  return lines;\n}\n\nexport function pathsExistProm(arrPathsObj, szPreErrorMessage) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (Array.isArray(arrPathsObj)) {\n        arrPathsObj.map(async pathToCheck => {\n          await fs.access(pathToCheck);\n        });\n      } else {\n        await fs.access(arrPathsObj);\n      }\n      resolve([true, ...arrPathsObj]);\n    } catch (err) {\n      reject(`${chalk.red(szPreErrorMessage)}: \\n ${chalk.grey(err)}`);\n    }\n  });\n}\nexport async function pathsExistSync(\n  arrPathsObj,\n  szPreErrorMessage = \"Path did not exist\"\n) {\n  //TODO: Consider adding a return value (or prom) so it can be caught inline\n  //TODO: Consider adding option to include printLine & printMirrors for success cases\n  //TODO: Convert below into unit test (should pass)\n  // let rightPath = [\n  //   {\n  //     dir: \"sandbox/npm-starter-sample-module/src\",\n  //     name: \"npm-starter-sample-module\"\n  //   }\n  // ];\n  // pathsExistOrThrow(targets, \"PTOWatcher failed to initialize properly <fs.access>\");\n  //TODO: Convert below code into unit test (ie. should throw error)\n  // let wrongPathString = \"foo\"\n  // let wrongPathArray = [\n  //   {\n  //     foo: \"bar\"\n  //   }\n  // ];\n  // pathsExistOrThrow(wrongPathArray, \"PTOWatcher failed to initialize properly <fs.access>\");\n  // pathsExistOrThrow(wrongPathString, \"PTOWatcher failed to initialize properly <fs.access>\");\n\n  if (Array.isArray(arrPathsObj)) {\n    let arrFilePaths = arrPathsObj.flatMap(mTarget => {\n      if (typeof mTarget == \"object\") {\n        // * handle array of objects\n        // * (ie. default case; used for testing watcherConfig's \"targets\" array)\n\n        return Object.values(mTarget).map(pathToCheck => {\n          return pathToCheck;\n        });\n      } else {\n        // * handle array of strings\n        // * (ie. manually defined arrays with file paths)\n\n        return mTarget;\n      }\n    });\n    for (let pathToCheck of arrFilePaths) {\n      // ? Now iterate over the flattened map of paths (all should be strings)\n      try {\n        await fs.access(pathToCheck);\n      } catch (err) {\n        log(\n          `${chalk.red(\"Array of paths failed\")} ${printLine(\n            \"red\"\n          )} ${chalk.red(szPreErrorMessage)} \\n ${chalk.grey(err)}`\n        );\n      }\n    }\n  } else if (typeof arrPathsObj == \"string\") {\n    // ? handle checking path of single string\n    try {\n      await fs.access(arrPathsObj);\n    } catch (err) {\n      printLine(\"red\");\n      //TODO: Add a getLine() utility so that I can include in the middle of a log without needing to log inside of a log (which doesn't process stdout in proper order)\n      log(\n        `${chalk.red(\"Single string failed\")} \\n${chalk.red(\n          szPreErrorMessage\n        )} \\n ${chalk.grey(err)}`\n      );\n      printLine(\"red\");\n    }\n  }\n}\n","module.exports = require(\"chalk\");","module.exports = require(\"is-empty\");","module.exports = require(\"fs-extra\");"],"sourceRoot":""}